{"version":3,"sources":["images sync /^/.//.*$","images/puppy1.jpg","images/puppy10.jpg","images/puppy11.jpg","images/puppy12.jpg","images/puppy2.jpg","images/puppy3.jpg","images/puppy4.jpg","images/puppy5.jpg","images/puppy6.jpg","images/puppy7.jpg","images/puppy8.jpg","images/puppy9.jpg","components/Navbar/Navbar.js","components/Jumbotron/Jumbotron.js","components/Cards/Card.js","App.js","serviceWorker.js","index.js"],"names":["map","./puppy1.jpg","./puppy10.jpg","./puppy11.jpg","./puppy12.jpg","./puppy2.jpg","./puppy3.jpg","./puppy4.jpg","./puppy5.jpg","./puppy6.jpg","./puppy7.jpg","./puppy8.jpg","./puppy9.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Navbar","react_default","a","createElement","className","this","props","score","highscore","Component","Jumbotron","Card","onClick","imageClick","alt","image","replace","src","require","App","state","puppy","clickedPuppy","event","currentHighScore","_this","currentPuppy","target","indexOf","setState","sort","b","Math","random","alert","concat","_this2","components_Navbar_Navbar","components_Jumbotron_Jumbotron","components_Cards_Card","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.547a4f70.chunk.js","sourcesContent":["var map = {\n\t\"./puppy1.jpg\": 20,\n\t\"./puppy10.jpg\": 21,\n\t\"./puppy11.jpg\": 22,\n\t\"./puppy12.jpg\": 23,\n\t\"./puppy2.jpg\": 24,\n\t\"./puppy3.jpg\": 25,\n\t\"./puppy4.jpg\": 26,\n\t\"./puppy5.jpg\": 27,\n\t\"./puppy6.jpg\": 28,\n\t\"./puppy7.jpg\": 29,\n\t\"./puppy8.jpg\": 30,\n\t\"./puppy9.jpg\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","module.exports = __webpack_public_path__ + \"static/media/puppy1.9127bb54.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy10.2c4adc86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy11.c6922dbc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy12.b6ba7359.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy2.c9b2ff46.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy3.e9459fa3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy4.159db365.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy5.c37756a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy6.beaa43a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy7.22719ef6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy8.48ad7943.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puppy9.96aab145.jpg\";","import React, { Component } from \"react\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-default navbar-fixed-top\">\n         <ul>\n          <li className=\"itemLeft\">React Memory Game</li>\n          <li className=\"itemCenter\"></li>\n          <li className=\"itemRight\">Score: {this.props.score}</li>\n          <li className=\"itemRight\">High Score: {this.props.highscore}</li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","//sets up the reusable Jumbotron component\nimport React from \"react\";\nimport \"./Jumbotron.css\";\n\nconst Jumbotron = () => (\n\t<header className = \"header\">\n\t\t<h1>Puppy Clicky-Game!</h1>\n\t\t<h2>Click on any image to earn a point, but don't click on the same picture more than once.</h2>\n\t</header>\n);\nexport default Jumbotron;","import React from \"react\";\nimport \"./Card.css\";\n\n//pass the image into each card so all 12 are rendered\nconst Card = props => (\n  <div className=\"card\" onClick={props.imageClick}>\n    <div className=\"img-container\">\n      <img alt={props.image.replace(\".jpg\", \"\")} src={require(\"../../images/\" + props.image)} />\n    </div>\n  </div>\n);\n\nexport default Card;","//imports dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Card from \"./components/Cards\";\nimport puppy from \"./puppy.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    puppy,\n    clickedPuppy: [],\n    score: 0,\n    highscore: 0\n  };\n\n  imageClick = event => {\n    let currentHighScore = this.state.highscore;\n    const currentPuppy = event.target.alt;\n    const PuppyAlreadyClicked =\n      this.state.clickedPuppy.indexOf(currentPuppy) > -1;\n\n    if (PuppyAlreadyClicked) {\n      if (this.state.score > currentHighScore) {\n        currentHighScore = this.state.score\n      } this.setState({\n        puppy: this.state.puppy.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        highscore: currentHighScore,\n        clickedPuppy: [],\n        score: 0\n      });\n        alert(\"You lost. Would you like to play again?\");\n      \n    } else {\n      this.setState(\n        {\n          puppy: this.state.puppy.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedPuppy: this.state.clickedPuppy.concat(\n            currentPuppy\n          ),\n          score: this.state.score + 1,\n        },\n        \n        () => {\n          if (this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n            this.setState({\n              puppy: this.state.puppy.sort(function(a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedPuppy: [],\n              score: 0,\n              highscore: 0\n            });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n          highscore={this.state.highscore}\n        />\n        <Jumbotron/>\n        <div className=\"wrapper\">\n          {this.state.puppy.map(puppy => (\n            <Card\n              imageClick={this.imageClick}\n              id={puppy.id}\n              key={puppy.id}\n              image={puppy.image}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}